{"version":3,"sources":["components/cardDisplay.js","components/scoreBoard.js","App.js","index.js"],"names":["CardDisplay","props","items","i","push","className","src","alt","style","width","onClick","handleClick","id","randomArray","Math","floor","random","length","ScoreBoard","count","highScore","App","useState","setCount","setHighScore","memory","setMemory","useEffect","console","log","indexOf","lastIndexOf","event","cardName","target","gameData","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0KAqBeA,EArBK,SAACC,GAEnB,IADA,IAAIC,EAAQ,GACHC,EAAI,EAAGA,EAAI,GAAIA,IACtBD,EAAME,KACJ,qBACEC,UAAU,cACVC,IAAK,aAAeH,EAAI,QACxBI,IAAI,OACJC,MAAO,CAAEC,MAAO,OAChBC,QAAST,EAAMU,YACfC,GAAIT,KAKV,IADA,IAAIU,EAAc,GACTV,EAAI,EAAGA,EAAI,GAAIA,IACtBU,EAAYT,KAAKF,EAAMY,KAAKC,MAAMD,KAAKE,SAAWd,EAAMe,UAE1D,OAAO,qBAAKZ,UAAU,cAAf,SAA8BQ,KCRxBK,EAVI,SAACjB,GAClB,OACE,gCACE,qEACA,2CAAcA,EAAMkB,SACpB,gDAAmBlB,EAAMmB,iBCkChBC,EAlCH,WACV,MAA0BC,mBAAS,GAAnC,mBAAOH,EAAP,KAAcI,EAAd,KACA,EAAkCD,mBAAS,GAA3C,mBAAOF,EAAP,KAAkBI,EAAlB,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KAEAC,qBAAU,WACRC,QAAQC,IAAI,kBACZ,IAAK,IAAI1B,EAAI,EAAGA,EAAIsB,EAAOR,OAAQd,IAC7BsB,EAAOK,QAAQL,EAAOtB,MAAQsB,EAAOM,YAAYN,EAAOtB,MAC1DuB,EAAU,IACVF,EAAaL,GACbI,EAAS,GACTK,QAAQC,IAAI,cAGhBD,QAAQC,IAAI,mBAWd,OADAD,QAAQC,IAAI,UAEV,gCACE,cAAC,EAAD,CAAYV,MAAOA,EAAOC,UAAWA,IACrC,cAAC,EAAD,CAAaT,YAXG,SAACqB,GACnBT,EAASJ,EAAQ,GACjB,IAAMc,EAAWD,EAAME,OAAO5B,IACxB6B,EAAWV,EACjBU,EAAS/B,KAAK6B,GACdP,EAAUS,UCxBdC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.cd970565.chunk.js","sourcesContent":["const CardDisplay = (props) => {\r\n  let items = []\r\n  for (let i = 1; i < 66; i++) {\r\n    items.push(\r\n      <img\r\n        className=\"imagesClass\"\r\n        src={'images/1 (' + i + ').png'} //1 (1)\r\n        alt=\"card\"\r\n        style={{ width: 15 + '%' }}\r\n        onClick={props.handleClick}\r\n        id={i}\r\n      />\r\n    )\r\n  }\r\n  let randomArray = []\r\n  for (let i = 0; i < 12; i++) {\r\n    randomArray.push(items[Math.floor(Math.random() * items.length)])\r\n  }\r\n  return <div className=\"mainDisplay\">{randomArray}</div>\r\n}\r\n\r\nexport default CardDisplay\r\n","const ScoreBoard = (props) => {\r\n  return (\r\n    <div>\r\n      <p>Do not click on the same card twice.</p>\r\n      <p>Score is: {props.count}</p>\r\n      <p>High Score is: {props.highScore}</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ScoreBoard\r\n","import React, { useState, useEffect } from 'react'\r\n\r\nimport CardDisplay from './components/cardDisplay'\r\nimport ScoreBoard from './components/scoreBoard'\r\n\r\nconst App = () => {\r\n  const [count, setCount] = useState(0)\r\n  const [highScore, setHighScore] = useState(0)\r\n  const [memory, setMemory] = useState([])\r\n\r\n  useEffect(() => {\r\n    console.log('use effect ran')\r\n    for (let i = 0; i < memory.length; i++) {\r\n      if (memory.indexOf(memory[i]) !== memory.lastIndexOf(memory[i])) {\r\n        setMemory([])\r\n        setHighScore(count)\r\n        setCount(0)\r\n        console.log('stop here')\r\n      }\r\n    }\r\n    console.log('cotinue here')\r\n  })\r\n\r\n  const handleClick = (event) => {\r\n    setCount(count + 1)\r\n    const cardName = event.target.src\r\n    const gameData = memory\r\n    gameData.push(cardName)\r\n    setMemory(gameData)\r\n  }\r\n  console.log('Render')\r\n  return (\r\n    <div>\r\n      <ScoreBoard count={count} highScore={highScore} />\r\n      <CardDisplay handleClick={handleClick} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}